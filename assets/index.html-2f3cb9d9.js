import{_ as t,r as s,o as c,c as h,a as e,b as n,d as r,e as o}from"./app-00a966d3.js";const d={},i=o('<h2 id="web-components" tabindex="-1"><a class="header-anchor" href="#web-components" aria-hidden="true">#</a> Web Components</h2><h3 id="概念和引用" tabindex="-1"><a class="header-anchor" href="#概念和引用" aria-hidden="true">#</a> 概念和引用</h3><blockquote><p>作为开发者，我们都知道尽可能多的重用代码是一个好主意。这对于自定义标记结构来说通常不是那么容易 — 想想复杂的 HTML（以及相关的样式和脚本），有时您不得不写代码来呈现自定义 UI 控件，并且如果您不小心的话，多次使用它们会使您的页面变得一团糟。 ———— MDN</p></blockquote><p>而我们可以把一个网页，看作是是由大大小小组件拼装而成的，而每一个组件都是可以单独去使用的，从而大大的提高了代码复用率。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',5),l={href:"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components",target:"_blank",rel:"noopener noreferrer"},p={href:"https://zh.javascript.info/webcomponents-intro",target:"_blank",rel:"noopener noreferrer"},_=o('<h2 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> Canvas</h2><p>可以使用 Javascript 和 HTML 绘制图表、只做图片或者制作简单的动画。</p><h2 id="webrtc" tabindex="-1"><a class="header-anchor" href="#webrtc" aria-hidden="true">#</a> webRTC</h2><p>用途：浏览器录屏、截屏</p><h3 id="参考-1" tabindex="-1"><a class="header-anchor" href="#参考-1" aria-hidden="true">#</a> 参考</h3>',5),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API",target:"_blank",rel:"noopener noreferrer"};function f(u,m){const a=s("ExternalLinkIcon");return c(),h("div",null,[i,e("ul",null,[e("li",null,[e("a",l,[n("MDN-Web Components"),r(a)])]),e("li",null,[e("a",p,[n("javascript-info"),r(a)])])]),_,e("ul",null,[e("li",null,[e("a",b,[n("MDN-Canvas"),r(a)])])])])}const v=t(d,[["render",f],["__file","index.html.vue"]]);export{v as default};
