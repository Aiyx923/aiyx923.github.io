import{_ as e,r as o,o as l,c,a as n,b as a,d as t,e as p}from"./app-00a966d3.js";const i={},u=p(`<h1 id="在小程序中调用api在小程序中自定义弹窗组件" tabindex="-1"><a class="header-anchor" href="#在小程序中调用api在小程序中自定义弹窗组件" aria-hidden="true">#</a> 在小程序中调用API在小程序中自定义弹窗组件</h1><p>因为业务需要在小程序里加上很多的弹窗，就想写一个组件来实现；</p><h2 id="创建组件" tabindex="-1"><a class="header-anchor" href="#创建组件" aria-hidden="true">#</a> 创建组件</h2><ol><li>新建文件夹<code>component</code>专门放组件，</li><li>新建popup页面，在popup.json中设置：</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表明它是一个组件，我们称之为“子组件” 3. 注意：在组件wxss中不应使用ID选择器、属性选择器和标签名选择器。（只使用class）</p><h2 id="如何使用组件" tabindex="-1"><a class="header-anchor" href="#如何使用组件" aria-hidden="true">#</a> 如何使用组件</h2><p>便于区分，引用子组件的页面我们称之为“父组件，” 在父组件的json里先引用子组件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;component-tag-name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;path/to/the/custom/component&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="父组件传值给子组件" tabindex="-1"><a class="header-anchor" href="#父组件传值给子组件" aria-hidden="true">#</a> 父组件传值给子组件</h2><p>因为这个自定义的弹窗组件会应用于很多不同的页面，所以显示的弹窗标题也是不同的，这就是需要父组件给子组件自定义标题，也就是子组件的标题应该从父组件中接受到的。 子组件里： wxml</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>{{popupTitle}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里定义了innerText属性，属性值可以在组件使用时指定</span>
    <span class="token literal-property property">popupTitle</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//弹窗标题</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;默认值&#39;</span><span class="token punctuation">,</span> 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>父组件里： wxml</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>popup</span> <span class="token attr-name">popup-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{pagetitle}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pagetitle</span><span class="token operator">:</span> <span class="token string">&#39;我是页面标题&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>. 在子组件中自定义值是以小驼峰的形式书写的，但是在父组件传的时候要以“-”连接。</p><h2 id="子组件改变父组件的值" tabindex="-1"><a class="header-anchor" href="#子组件改变父组件的值" aria-hidden="true">#</a> 子组件改变父组件的值</h2><p>这个组件的显示和隐藏都是在父组件决定的，但是因为我这是一个全屏的弹窗，覆盖了整个屏幕，所以想要关闭弹框只能想办法在子组件的点击事件上想办法。 基本逻辑是这样的： 操作流程：打开页面- 点击弹框（弹出子组件）- 点击关闭（点击子组件关闭弹窗） 数据流程：打开页面-点击弹框（传入弹窗标题、点赞成功结果、其他参数）-点击关闭（在父组件上自定义组件，然后子组件关闭按钮监听onTap事件，点击子组件关闭按钮时，会通知父组件去改变状态）</p><p>逻辑：</p><ol><li>在子组件中给要触发的元素加 bindtap = &#39;onTap&#39;</li><li>然后通过在method中设置onTap函数</li><li>在onTap中的triggerEvent中设置要触发父组件事件的函数名称</li><li>父组件接收到字组件的消息，然后触发事件</li></ol>`,23),r={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html",target:"_blank",rel:"noopener noreferrer"},d=p(`<p>子组件： wxml</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hide-btn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onTap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>×<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//放自定义的方法</span>
    <span class="token function-variable function">onTap</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> myEventDetail <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// detail对象，提供给事件监听函数</span>
      <span class="token keyword">var</span> myEventOption <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 触发事件的选项</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">子组件：&#39;向父组件发送通知，我要关闭弹窗&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&#39;hidepopop&#39;</span><span class="token punctuation">,</span> myEventDetail<span class="token punctuation">,</span> myEventOption<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>父组件 wxml</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>popup</span> 
<span class="token attr-name">bindhidepopop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidePopop<span class="token punctuation">&quot;</span></span> 
<span class="token attr-name">is-show-popup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{isShowPopup}}<span class="token punctuation">&quot;</span></span> 
<span class="token attr-name">popup-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{popupTitle}}<span class="token punctuation">&quot;</span></span> 
<span class="token attr-name">popup-content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{popupContent}}<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token function-variable function">hidePopop</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">)</span> <span class="token comment">// 自定义组件触发事件时提供的detail对象</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;父组件：我接受到了子组件的关闭弹窗的通知！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">isShowPopup</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),k=n("li",null,[n("p",null,[a("参考 "),n("a",{href:"%5Bhttps://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/%5D(https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/)"},"小程序-自定义组件")])],-1),v={href:"https://github.com/AnsonZnl/wx-component-popup",target:"_blank",rel:"noopener noreferrer"};function m(g,h){const s=o("ExternalLinkIcon");return l(),c("div",null,[u,n("p",null,[a("具体参考："),n("a",r,[a("小程序-组件通信"),t(s)])]),d,n("ul",null,[k,n("li",null,[n("p",null,[a("代码地址："),n("a",v,[a("https://github.com/AnsonZnl/wx-component-popup"),t(s)])])])])])}const q=e(i,[["render",m],["__file","在小程序中自定义弹窗组件.html.vue"]]);export{q as default};
