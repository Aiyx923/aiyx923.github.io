import{_ as n,o as s,c as a,e}from"./app-00a966d3.js";const t={},p=e(`<h2 id="字符串相加" tabindex="-1"><a class="header-anchor" href="#字符串相加" aria-hidden="true">#</a> 字符串相加</h2><p>给定两个字符串形式的非负整数 num1 和num2 ，计算它们的和并同样以字符串形式返回。</p><p>你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>示例 1：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：num1 = &quot;11&quot;, num2 = &quot;123&quot;
输出：&quot;134&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 2：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：num1 = &quot;456&quot;, num2 = &quot;77&quot;
输出：&quot;533&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 3：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：num1 = &quot;0&quot;, num2 = &quot;0&quot;
输出：&quot;0&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>链接：https://leetcode-cn.com/problems/add-strings</p><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><p>既然不能使用转换数值的方式，那就将字符串的每个值单个相加，最后得出一个和的字符串。 有点类似小学数学教的进位法，十进位。</p><p><strong>思路</strong></p><ul><li>先通过补零，使得两个字符串长度一样。</li><li>从低位开始，对应位进行相加在进位 <ul><li>结果大于等于10则 进位为1 当前位值为 结果对10求余</li><li>结果小于10 进位为0 当前位值为 结果对10求余</li></ul></li><li>重复以上操作</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addStrings</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> m</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span><span class="token comment">// 结果</span>
    <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// 进位</span>
    <span class="token comment">// 补零</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> m<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        n <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> n
    <span class="token punctuation">}</span>
     <span class="token keyword">while</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> n<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        m <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> m
    <span class="token punctuation">}</span>
    <span class="token comment">// 从最后一位开始</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> n<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        flag <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> flag<span class="token punctuation">;</span><span class="token comment">// 求和</span>
        res <span class="token operator">=</span> <span class="token punctuation">(</span>flag <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> res<span class="token punctuation">;</span> <span class="token comment">// 存储之前的和</span>
        flag <span class="token operator">=</span> flag <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 大于10 则进1位</span>
        i<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> flag <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;1&#39;</span> <span class="token operator">+</span> res <span class="token operator">:</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>思路比代码重要</p>`,19),o=[p];function l(c,i){return s(),a("div",null,o)}const r=n(t,[["render",l],["__file","字符串相加.html.vue"]]);export{r as default};
