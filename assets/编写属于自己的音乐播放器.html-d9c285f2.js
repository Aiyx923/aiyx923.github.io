import{_ as c,r as e,o as l,c as u,a as n,b as a,d as s,w as i,e as p}from"./app-00a966d3.js";const r={},k=p('<h1 id="编写属于自己的音乐播放器" tabindex="-1"><a class="header-anchor" href="#编写属于自己的音乐播放器" aria-hidden="true">#</a> 编写属于自己的音乐播放器</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>我们在 Web 开发过程中，有很多用到音频元素<code>audio</code>的场景，如音乐播放器、语音播放等功能，但是由于原生组件有以下缺点：</p><ul><li>原生UI样式丑，在追求美观的页面中需要重写元素样式，而且支持重写的样式不多。</li><li>浏览器兼容问题，不同浏览器的音频元素展示不同。</li></ul><p>因为以上两个问题，这就导致我们需要对原生的<code>audio</code>进行修改时比较困难。而对于大多数音频的需求，我们可以使用满足我们要求的第三方组件库中选择，如：</p>',5),d={href:"https://v2.h5player.bytedance.com/music",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/mediaelement/mediaelement",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>而对于 UI 有要求的需求，比如音乐播放器的需求，那就要遵循整个页面的 UI 主题，这种情况下我们就需要自定义编写一个音频组件了。</p><p>在本文中，我们将学会：</p><ol><li>如何修改音频元素的默认样式</li><li>如何重写音频自定义样式</li></ol><h2 id="如何修改音频元素的默认样式" tabindex="-1"><a class="header-anchor" href="#如何修改音频元素的默认样式" aria-hidden="true">#</a> 如何修改音频元素的默认样式</h2><p>默认情况下，音频元素不可见。需要添加控件属性以使其控件可见。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>音频.mp3<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2022/08/31/Z2e9CmKl3EkTgyb.png" alt="image.png"></p><p>音频元素在CSS中具有以下伪元素选择器：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-panel
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-mute-button
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-play-button
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-timeline-container
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-current-time-display
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-time-remaining-display
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-timeline
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-volume-slider-container
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-volume-slider
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-seek-back-button
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-seek-forward-button
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-fullscreen-button
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-rewind-button
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-return-to-realtime-button
<span class="token property">audio</span><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-media-controls-toggle-closed-captions-button
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这写伪类选择器，可以改变音频元素的基本样式，但是仅在Chrome浏览器下有效。</p><p>我把所有的伪类都给上不同的背景颜色，最后呈现的效果如下图所示：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">audio::-webkit-media-controls-xxx</span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> 颜色随机<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2022/08/31/SnqNdYxW5oQyTa1.png" alt="image.png"></p><p>也就是，只能修改部分样式，没有提供更细致的修改。</p><p>如果想要设置进度条的颜色，基本只能自定义重写播放器了。</p><h2 id="自定义音频播放器" tabindex="-1"><a class="header-anchor" href="#自定义音频播放器" aria-hidden="true">#</a> 自定义音频播放器</h2><p>接下来，将是我们本文的重点，我们将创建自己的自定义音频播放器。</p><p>我们自定义的播放器，它使用不同的元素来实现控件的UI。然后在 Javascript 的帮助下将音频元素的功能绑定到这些元素。</p><p>首先我们先写一个简单的布局</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>audio-player<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.mp3<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--audio 播放器，隐藏掉--&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>poster<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx.png<span class="token punctuation">&#39;</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--封面图--&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>poster<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>音乐播放器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls-con<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>player-button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 播放暂停按钮图片 --&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>timeline<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--进度条 使用input[ragne]实现--&gt;</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sound-button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 音量开关按钮图片 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们首先创建了一个<code>audio</code>元素，但是不需要它显示，只需要它的音频功能，也不需要它的UI。然后我们自定义播放器的封面图、控件等UI元素，样式可以自己调整，就不放CSS了，我调整后显示结果大概是这样。</p><p><img src="https://s2.loli.net/2022/08/31/jPzOU9XaDS2ohf3.png" alt="image.png"></p><p>然后我们如何将自己定义的元素控件去作用于这个<code>audio</code>元素呢？这就需要用到它的一些属性和方法了，如：</p><ul><li>属性 <ul><li>currentTime-当前音频的播放位置<code>&lt;string&gt;</code></li><li>duration-音频的播放总长度<code>&lt;string&gt;</code></li><li>muted-是否静音<code>&lt;boolean&gt;</code></li></ul></li><li>方法 <ul><li>play()-播放</li><li>pause()-暂停</li><li>ended()-播放结束</li><li>timeupdate()-音频位置变化</li></ul></li></ul>`,24),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio",target:"_blank",rel:"noopener noreferrer"},b=p(`<p>还有关于进度条的改变，可以通过<code>&lt;input type=&#39;range&#39;&gt;</code>去简单实现进度条。<strong>从而可以监听进度条位置，改变音频位置。反之可以通过监听<code>audio</code>的<code>timeupdate</code>方法改变进度条。</strong> 这里主要用到的属性和方法为：</p><ul><li>属性 <ul><li>value-当前进度<code>&lt;number&gt;</code></li></ul></li><li>方法 <ul><li>change-进度条改变</li></ul></li></ul><p>说到这，大家也就应该明白了，我们利用原有的<code>audio</code>的方法和属性去实现自己的 UI 控件，这其实也是流行音频组件库的做法。 下面直接看音频控件的 javaScript 代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> playerButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.player-button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 获取播放/暂停按钮</span>
  audio <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;audio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 获取音频</span>
  timeline <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.timeline&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 获取进度条</span>
  soundButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.sound-button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 过去音量按钮（是否静音）</span>

<span class="token comment">// 1. 通过监听按钮的点击时间，修改音频的播放、暂停状态，并设置对应的 icon.</span>
playerButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>audio<span class="token punctuation">.</span>paused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    audio<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    playerButton<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> pauseIcon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    audio<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    playerButton<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> playIcon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2. 通过监听音频播放的进度设置 input 进度条的 value.</span>
audio<span class="token punctuation">.</span><span class="token function-variable function">ontimeupdate</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> percentagePosition <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">*</span> audio<span class="token punctuation">.</span>currentTime<span class="token punctuation">)</span> <span class="token operator">/</span> audio<span class="token punctuation">.</span>duration<span class="token punctuation">;</span>
  timeline<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundSize <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>percentagePosition<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">% 100%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  timeline<span class="token punctuation">.</span>value <span class="token operator">=</span> percentagePosition<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 3. 如果播放结束，将播放按钮重置为暂停状态。</span>
audio<span class="token punctuation">.</span>onended <span class="token operator">=</span> <span class="token function-variable function">audioEnded</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  playerButton<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> playIcon<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 4. 监听进度条变化，并设置音频位置。</span>
timeline<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> time <span class="token operator">=</span> <span class="token punctuation">(</span>timeline<span class="token punctuation">.</span>value <span class="token operator">*</span> audio<span class="token punctuation">.</span>duration<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
  audio<span class="token punctuation">.</span>currentTime <span class="token operator">=</span> time<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 5. 监听音频按钮变化，并设置对应的状态（是否静音）和icon</span>
soundButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  audio<span class="token punctuation">.</span>muted <span class="token operator">=</span> <span class="token operator">!</span>audio<span class="token punctuation">.</span>muted<span class="token punctuation">;</span>
  soundButton<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> audio<span class="token punctuation">.</span>muted <span class="token operator">?</span> muteIcon <span class="token operator">:</span> soundIcon<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),h=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"musicPlayer",src:"https://codepen.io/ansonznl/embed/oNdvaOx?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/ansonznl/pen/oNdvaOx">
  musicPlayer</a> by 九旬大爷的梦 (<a href="https://codepen.io/ansonznl">@ansonznl</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),q=n("h2",{id:"结论",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#结论","aria-hidden":"true"},"#"),a(" 结论")],-1),y=n("p",null,"使用伪元素选择器，您可以对音频元素进行简单的设计更改。",-1),_=n("p",null,"对于更复杂的设计更改，最好实现自定义音频播放器，然后使用 Javascript 将其绑定到音频元素以提供必要的功能。",-1),f=n("p",null,"到这里，基本就学会了自定义音频播放器了，希望大家能有所收获。",-1),w=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),a(" 参考")],-1);function x(E,B){const t=e("ExternalLinkIcon"),o=e("RouterLink");return l(),u("div",null,[k,n("ul",null,[n("li",null,[n("a",d,[a("西瓜播放器"),s(t)])]),n("li",null,[n("a",m,[a("Media Element"),s(t)])])]),v,n("p",null,[a("具体参考 "),n("a",g,[a("MDN-audio>"),s(t)])]),b,h,q,y,_,f,w,n("ul",null,[n("li",null,[s(o,{to:"/articles/Browser/http%E9%9F%B3%E9%A2%91%E5%85%83%E7%B4%A0%E5%9C%A8CSS%E4%B8%AD%E5%85%B7%E6%9C%89%E4%BB%A5%E4%B8%8B%E4%BC%AA%E5%85%83%E7%B4%A0%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%9As:/blog.shahednasser.com/how-to-style-an-audio-element/#using-pseudo-element-selectors"},{default:i(()=>[a("How to Style an Audio Element")]),_:1})])])])}const C=c(r,[["render",x],["__file","编写属于自己的音乐播放器.html.vue"]]);export{C as default};
