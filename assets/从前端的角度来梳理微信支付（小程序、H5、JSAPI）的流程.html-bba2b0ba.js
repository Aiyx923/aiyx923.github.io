import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-00a966d3.js";const i={},u=p('<h1 id="从前端的角度来梳理微信支付-小程序、h5、jsapi-的流程" tabindex="-1"><a class="header-anchor" href="#从前端的角度来梳理微信支付-小程序、h5、jsapi-的流程" aria-hidden="true">#</a> 从前端的角度来梳理微信支付（小程序、H5、JSAPI）的流程</h1><p>因业务需要，开发微信支付功能，涉及三种支付方式：</p><ul><li>JSAPI 支付：微信内网页支付，需要开通微信服务号</li><li>小程序支付：在小程序中支付，需要开通小程序</li><li>H5 支付：在手机浏览器（出微信内网爷）中网页支付</li></ul><p>使用微信支付的前提必开通微信商户号，要使用到那种的支付方式要前需在商户平台开通（要审核）。</p><p>支付的钱最终都会到商户号里（一般由公司财务开通）。</p><p>开发微信支付的过程中大大小小坑还是踩了不少，终于做完了，整理下开发流程。</p><p>参考：</p>',7),r={href:"https://pay.weixin.qq.com/static/applyment_guide/applyment_index.shtml",target:"_blank",rel:"noopener noreferrer"},d={href:"https://pay.weixin.qq.com/wiki/doc/api/index.html",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"小程序支付",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#小程序支付","aria-hidden":"true"},"#"),s(" 小程序支付")],-1),m=n("h3",{id:"开发流程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开发流程","aria-hidden":"true"},"#"),s(" 开发流程")],-1),v=n("li",null,[s("小程序端请求创建订单接口，后端统一下单获取 "),n("code",null,"orderId"),s(" 并返回")],-1),h={href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"code",-1),g=n("li",null,[s("小程序端拿这"),n("code",null,"code"),s("和"),n("code",null,"orderId"),s("请求后端接口，获取支付所需数据")],-1),_={href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,"判断是否支付成功后的逻辑",-1),y=p(`<h3 id="伪代码" tabindex="-1"><a class="header-anchor" href="#伪代码" aria-hidden="true">#</a> 伪代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">wxPay</span><span class="token punctuation">(</span><span class="token parameter">goodId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. 创建订单 获取orderId</span>
  <span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/CreateTheOrder&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    goodId<span class="token punctuation">,</span> <span class="token comment">// 商品id</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2. 获得 code</span>
  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">wxlogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 基于pr封装的wx.login()方法</span>
  <span class="token comment">// 3. 获取支付的数据</span>
  <span class="token keyword">let</span> payData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/WxXcxPay&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    orderId<span class="token punctuation">,</span>
    code<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 4. 发起支付</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">payment</span><span class="token punctuation">(</span>payData<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 基于pr封装的wx.requestPayment()方法</span>
  <span class="token comment">// 5. 判断是否支付成功</span>
  <span class="token keyword">let</span> payResult <span class="token operator">=</span> res<span class="token punctuation">.</span>errMsg<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>payResult <span class="token operator">==</span> <span class="token string">&quot;requestPayment:ok&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;支付成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>payResult <span class="token operator">==</span> <span class="token string">&quot;requestPayment:fail cancel&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;用户取消支付&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;支付失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h3><ol><li>申请微信小程序账号 申请成功可拿到 AppID（小程序 id）和 AppSecret（小程序密钥） 申请类型为企业性质，否则无法接入微信支付</li><li>微信小程序认证 通过认证的小程序才能接入微信支付和绑定商户平台</li><li>申请商户平台账号 需要第一步申请的 AppID 申请成功可拿到 MchID（商户 id）和 MchKey（商户密钥）</li><li>信小程序关联商户号 微信和商户都认证成功后，在微信后台微信支付菜单中进行关联</li><li>接入微信支付 在微信后台微信支付菜单中进行接入</li></ol><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h3>`,5),f={href:"https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_3&index=1",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html",target:"_blank",rel:"noopener noreferrer"},q=p(`<h2 id="h5-支付" tabindex="-1"><a class="header-anchor" href="#h5-支付" aria-hidden="true">#</a> H5 支付</h2><h3 id="开发流程-1" tabindex="-1"><a class="header-anchor" href="#开发流程-1" aria-hidden="true">#</a> 开发流程</h3><ol><li>前端端请求创建订单接口，后端统一下单获取 <code>orderId</code> 并返回</li><li>前端带着 <code>orderId</code> 请求支付接口，获得 <code>mweb_url</code>，</li><li>然后跳转 <code>mweb_url</code> 会跳转微信自动调用微信支付</li><li>支付后返回支付页，判断是否支付成功（需发送请求后端查询） 4.1 刷新页面，获取最新的支付（订单）状态。 4.2 设置一个的按钮&quot;我已支付&quot;，让用户点击自动查询状态。</li></ol><h3 id="伪代码-1" tabindex="-1"><a class="header-anchor" href="#伪代码-1" aria-hidden="true">#</a> 伪代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">wxH5Pay</span><span class="token punctuation">(</span><span class="token parameter">goodId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. 创建订单 获取orderId</span>
  <span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/CreateTheOrder&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    goodId<span class="token punctuation">,</span> <span class="token comment">// 商品id</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2. 获取支付跳转的URL</span>
  <span class="token keyword">let</span> mweb_url <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/WxH5Pay&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> orderId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 3. 跳转URL去微信支付</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mweb_url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    location<span class="token punctuation">.</span>href <span class="token operator">=</span> mweb_url<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;回调地址出错&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 4. 支付后返回支付页，判断是否支付成功</span>
  <span class="token comment">// 4.1 刷新页面，获取最新的订单(商品)状态。</span>
  <span class="token comment">// 4.2 设置一个&quot;我已支付&quot;的按钮，让用户点击之后查询状态。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项-1" tabindex="-1"><a class="header-anchor" href="#注意事项-1" aria-hidden="true">#</a> 注意事项</h3><ul><li>在商户平台设置正确的支付域名</li><li>调试需要在线上，如果嫌麻烦可以使用内网穿透（Ngrok 或花生壳）</li><li>需对<code>redirect_url</code>进行<code>urlencode</code>处理</li><li>H5 支付不能直接在微信客户端内调起，请在外部浏览器调起。</li></ul><h3 id="参考-1" tabindex="-1"><a class="header-anchor" href="#参考-1" aria-hidden="true">#</a> 参考</h3>`,8),P={href:"https://pay.weixin.qq.com/wiki/doc/api/H5.php?chapter=15_4",target:"_blank",rel:"noopener noreferrer"},I=p(`<h2 id="jsapi-支付-微信内网页支付" tabindex="-1"><a class="header-anchor" href="#jsapi-支付-微信内网页支付" aria-hidden="true">#</a> JSAPI 支付（微信内网页支付）</h2><h3 id="开发流程-2" tabindex="-1"><a class="header-anchor" href="#开发流程-2" aria-hidden="true">#</a> 开发流程</h3><ul><li>商品页</li></ul><ol><li>前端商品页创建订单，在后端统一下单后获取 <code>orderId</code></li><li>前端带着 <code>orderId</code> 跳转到支付页，</li></ol><ul><li>支付页</li></ul><ol><li>获取 <code>code</code><ol><li>第一次进入页面，判断是否路径中有 <code>code</code></li><li>没有 <code>code</code>，请求数据跳转授权页面，<code>code</code> 会通过回调地址一起返回回来</li><li>拿到 <code>code</code>，发送给后端，后端解析到 <code>openid</code>，保存好。</li></ol></li><li>点击确定支付按钮，触发 <code>wxPay()</code> 方法 <ol><li>发送 <code>orderId</code> 给后端，获取 <code>wxData</code></li><li><code>wxData</code> 中包含 <code>wx.config</code> 和 <code>wx.chooseWXPay</code> 两个接口的数据。</li><li>先调用 <code>wx.config()</code>然后在调用 <code>wx.chooseWXPay()</code>，如果一切正常，支付页面就会弹出。</li></ol></li><li>支付状态通过后端去查询</li></ol><h3 id="伪代码-2" tabindex="-1"><a class="header-anchor" href="#伪代码-2" aria-hidden="true">#</a> 伪代码</h3><ul><li>商品页</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 1. 创建订单 获取orderId</span>
<span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/OrderProgram/CreateTheOrder&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  goodId<span class="token punctuation">,</span> <span class="token comment">// 商品id</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2. 携带id 跳转到支付页</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;wx_pay_page&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">orderId</span><span class="token operator">:</span> id <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>入口文件(<code>main.js</code>)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// main.js 引入 js-sdk</span>
<span class="token keyword">import</span> wx <span class="token keyword">from</span> <span class="token string">&quot;weixin-js-sdk&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>支付页 HTML</strong></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wxPay<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击支付<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>支付页 JS</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Vue</span>
<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">orderId</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>orderId<span class="token punctuation">,</span> <span class="token comment">// 订单id</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">// 获取code的url</span>
        <span class="token literal-property property">wxData</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token comment">// js-sdk接口所需的数据</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 判断是否有code</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> code <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUrlPram</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
            <span class="token comment">// 拿到 code 发给 后端</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 去拿code</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 请求后端拿到url所需数据，然后跳转页面在通过回调地址返回，获取code.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>axios
            <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/api/OrderProgram/GetOpenidAndAccessToken&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">orderId</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderId<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://open.weixin.qq.com/connect/oauth2/authorize?appid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>appId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;redirect_uri=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>redirect_uri<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;response_type=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>response_type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;scope=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>scope<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;state=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>state<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
                window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">sendCode</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 发送code给后端 后端解析出openid</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>axios
            <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/api/OrderProgram/GetOpenidAndAccessTokenFromCode&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">code</span><span class="token operator">:</span> code<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">wxPay</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 发送orderid，获取wx.chooseWXPay和wx.config所需的参数</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>wxData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>
            <span class="token string">&quot;/api/OrderProgram/WxJSAPIPay&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">orderId</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderId <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> wxConfigData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>wxData<span class="token punctuation">.</span>wxConfigData <span class="token comment">// 获取wx.chooseWXPay()所需数据</span>
        <span class="token keyword">let</span> wxPayData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>wxData<span class="token punctuation">.</span>wxPayData<span class="token punctuation">;</span><span class="token comment">// 获取wx.config()所需数据</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$wx<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">debug</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span>
            <span class="token literal-property property">appId</span><span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>appId<span class="token punctuation">,</span> <span class="token comment">// 必填，公众号的唯一标识</span>
            <span class="token literal-property property">timestamp</span><span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>timeStamp<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的时间戳</span>
            <span class="token literal-property property">nonceStr</span><span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">// 必填，生成签名的随机串</span>
            <span class="token literal-property property">signature</span><span class="token operator">:</span> wxConfigData<span class="token punctuation">.</span>paySign<span class="token punctuation">,</span> <span class="token comment">// 必填，签名</span>
            <span class="token literal-property property">jsApiList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;chooseWXPay&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 执行支付</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$wx<span class="token punctuation">.</span><span class="token function">chooseWXPay</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">timestamp</span><span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>timeStamp<span class="token punctuation">,</span> <span class="token comment">// 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符</span>
            <span class="token literal-property property">nonceStr</span><span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>nonceStr<span class="token punctuation">,</span> <span class="token comment">// 支付签名随机串，不长于 32 位</span>
            <span class="token keyword">package</span><span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>package<span class="token punctuation">,</span> <span class="token comment">// 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=\\*\\*\\*）</span>
            <span class="token literal-property property">signType</span><span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>signType<span class="token punctuation">,</span> <span class="token comment">// 签名方式，默认为&#39;SHA1&#39;，使用新版支付需传入&#39;MD5&#39;</span>
            <span class="token literal-property property">paySign</span><span class="token operator">:</span> wxPayData<span class="token punctuation">.</span>paySign<span class="token punctuation">,</span> <span class="token comment">// 支付签名</span>
            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$toast</span><span class="token punctuation">(</span><span class="token string">&quot;支付成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$toast</span><span class="token punctuation">(</span><span class="token string">&quot;支付失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同时支持-h5-支付和-jsapi-支付" tabindex="-1"><a class="header-anchor" href="#同时支持-h5-支付和-jsapi-支付" aria-hidden="true">#</a> 同时支持 H5 支付和 JSAPI 支付</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在创建订单之后，就判断环境使用哪种方法支付。</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isWx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">WXPay</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 带着orderId跳转到支付页逻辑</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">H5Pay</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行上面H5支付中的创建订单之后的逻辑</span>
<span class="token punctuation">}</span>
<span class="token comment">// 判断是否是微信浏览器</span>
<span class="token keyword">function</span> <span class="token function">isWx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> uAgent <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reutrn</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">micromessenger</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>uAgent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项-2" tabindex="-1"><a class="header-anchor" href="#注意事项-2" aria-hidden="true">#</a> 注意事项</h3>`,18),j=n("li",null,[n("p",null,[s("开通微信商户号 - 设置支付目录（如果是 Vue 这类 SPA 页面，到根目录即可，也就是#号之前的地址） "),n("img",{src:"https://i.loli.net/2020/11/19/4XFPVlYrHLk8g7p.png",alt:"wxpay1.png"})])],-1),S=n("li",null,[n("p",null,[s("开通微信公众号（服务号） - 设置安全域名、设置授权域名 "),n("img",{src:"https://i.loli.net/2020/11/19/m5IhT3RfBQkg9MY.png",alt:"wxpay8.png"})])],-1),A=n("li",null,[n("p",null,"收集参数：appId 和 AppSecret")],-1),D={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Web_Developer_Tools.html",target:"_blank",rel:"noopener noreferrer"},O=n("img",{src:"https://i.loli.net/2020/11/19/zTOxPq7QD9sgjhr.png",alt:"wxpay3.png"},null,-1),W=n("code",null,"www.xx.com/pay",-1),H=n("code",null,"www.xx.com/pay?code=xxxx",-1),T={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noopener noreferrer"},C=n("img",{src:"https://i.loli.net/2020/11/19/H8lFo4hEIwMU3ku.png",alt:"wxpay5.png"},null,-1),J=n("p",null,"获取 code",-1),$={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noopener noreferrer"},X=n("li",null,[n("p",null,[s("在微信客户端网页打开授权地址，跳转之后，在返回的回调地址之后拿到 "),n("code",null,"code"),s("：")])],-1),L=p(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://open.weixin.qq.com/connect/oauth2/authorize
?appid=你的appid
&amp;redirect_uri=你的回调地址（拿到code后返回）
&amp;response_type=code（返回类型，默认code）
&amp;scope=snsapi_base（授权范围，静默授权拿到openid）
&amp;state=STATE(自定义状态，非必填)
#wechat_redirect（重定向使用必须携带）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>redirect_uri</code>参数要和你在微信公众号里设置的回调域名一致（例如：<code>www.xx.com/pay</code>）,需要注意的是这 url 需要<code>urlEncode</code>。</p><p>请求这个地址之后，<code>code</code> 会以你设置的<code>redirect_uri</code>地址里的参数带回来，拿到之后传给后端就行了。</p>`,3),M=n("p",null,"前端引入 js-skd",-1),V=n("code",null,"script",-1),z={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"npm",-1),K={href:"https://www.npmjs.com/package/weixin-js-sdk",target:"_blank",rel:"noopener noreferrer"},N=n("li",null,[n("p",null,[s("获取 "),n("code",null,"wx.config"),s(" 的参数 "),n("img",{src:"https://i.loli.net/2020/11/19/3cnG8dCalupfT7A.png",alt:"wxpay6.png"})])],-1),R=n("li",null,[n("p",null,[s("获取 "),n("code",null,"wx.chooseWXPay"),s(" 所需的参数 "),n("img",{src:"https://i.loli.net/2020/11/19/CcrgNvwx8lbjq7B.png",alt:"wxpay7.png"})])],-1),U=n("h3",{id:"参考-2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考-2","aria-hidden":"true"},"#"),s(" 参考")],-1),B={href:"https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_1",target:"_blank",rel:"noopener noreferrer"},G={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html",target:"_blank",rel:"noopener noreferrer"},F={href:"https://blog.csdn.net/weixin_40814356/article/details/103948635",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#62",target:"_blank",rel:"noopener noreferrer"},Z=n("code",null,"signature",-1),nn={href:"https://shimo.im/docs/QHHQ6Cr66Wtx8g9Y",target:"_blank",rel:"noopener noreferrer"},sn=p('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>整个流程走下来，给我的体验是：小程序支付最方便（因为配置少），其次是 H5，JSAPI 支付最麻烦（文章一多半都在写它）</p><p>在微信支付功能开发过程中，其实最麻烦的不是开发流程，而是他的各种配置和授权流程，为了拿到所需的参数而来回折腾。</p><p>开发过程中的一些参数是经常用到的，如 appid、openid、orderId</p><p>支付流程大径相同，先获取到用户的 openid，知道你是谁，然后统一下单拿到 orderId 再去处理不同平台的支付方式</p><p>开发时候用到的相关文档，一定要<strong>仔细</strong>阅读二遍以上为止！！</p><p>遇到问题不要死刚，多百度多 Google，说不准你遇到的问题已经有无数的人遇到过并且已经有成熟的解决方案了。</p><p>前端和后端要多沟通，有什么问题(难点)随时反馈，需要什么参数好好说，遇到观点不一致的时候千万要注意控制住情绪，切莫撕逼（.——.）。</p><p>因为本人水平有限，对后端流程懂得不多，只能以前端的角度来梳理整个支付流程。</p><p>以上，希望对你有所帮助。</p>',10);function an(tn,pn){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("微信支付-接入指引"),t(a)])]),n("li",null,[n("a",d,[s("微信支付-开发文档"),t(a)])])]),k,m,n("ol",null,[v,n("li",null,[s("小程序端获取通过"),n("a",h,[s("wx.login()"),t(a)]),s("获取"),b]),g,n("li",null,[s("获取支付所需数据之后，小程序端调用"),n("a",_,[s("wx.requestPayment()"),t(a)]),s("接口，直接调用起支付页面")]),w]),y,n("ul",null,[n("li",null,[n("a",f,[s("小程序支付文档"),t(a)])]),n("li",null,[n("a",x,[s("小程序开发文档"),t(a)])])]),q,n("ul",null,[n("li",null,[n("a",P,[s("微信支付-H5 支付-开发步骤"),t(a)])])]),I,n("ul",null,[j,S,A,n("li",null,[n("p",null,[s("添加 Web 开发工具开发者（需要开发者同时开发者关注开发的微信公众号和微信公众账号安全助手）"),n("a",D,[s("参考文档"),t(a)]),O])])]),n("ul",null,[n("li",null,[n("p",null,[s("设置回调域名（例如："),W,s("，最后获取的 code 会拼在此回调地址后返回，返回后如"),H,s("）"),n("a",T,[s("参考 1"),t(a)]),C])]),n("li",null,[J,n("ul",null,[n("li",null,[n("p",null,[s("参考"),n("a",$,[s("获取 code 文档"),t(a)])])]),X])])]),L,n("ul",null,[n("li",null,[M,n("ul",null,[n("li",null,[s("使用"),V,s("引入"),n("a",z,[s("js-sdk"),t(a)])]),n("li",null,[s("下载使用 "),E,s(" 包"),n("a",K,[s("weixin-js-sdk"),t(a)])])])]),N,R]),U,n("ul",null,[n("li",null,[n("a",B,[s("微信支付-JSAPI"),t(a)])]),n("li",null,[n("a",G,[s("微信公众号-网页授权"),t(a)])]),n("li",null,[n("a",Q,[s("JS-SDK 开发文档"),t(a)])]),n("li",null,[n("a",F,[s("小程序、H5 登录授权、分享、支付流程"),t(a)])]),n("li",null,[n("a",Y,[s("wx.config 接口注入时"),Z,s("参数需要注意，坑比较多"),t(a)])]),n("li",null,[n("a",nn,[s("我的 JS-SDK 使用总结"),t(a)])])]),sn])}const on=e(i,[["render",an],["__file","从前端的角度来梳理微信支付（小程序、H5、JSAPI）的流程.html.vue"]]);export{on as default};
